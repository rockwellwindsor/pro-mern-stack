{"version":3,"sources":["../server/server.js"],"names":["SourceMapSupport","install","app","use","express","static","bodyParser","json","db","MongoClient","connect","then","connection","listen","console","log","catch","error","get","req","res","filter","query","status","collection","find","toArray","issues","metadata","total_count","length","_metadata","records","message","post","newIssue","body","created","Date","err","Issue","validateIssue","insertOne","result","_id","insertedId","limit","next","sendFile","path","resolve"],"mappings":";;AACA;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AANAA,2BAAiBC,OAAjB;;;AAQA,MAAMC,MAAM,wBAAZ;AACAA,IAAIC,GAAJ,CAAQC,kBAAQC,MAAR,CAAe,QAAf,CAAR;AACAH,IAAIC,GAAJ,CAAQG,qBAAWC,IAAX,EAAR;;AAEA,IAAIC,EAAJ;AACAC,qBAAYC,OAAZ,CAAoB,kCAApB,EAAwDC,IAAxD,CAA6DC,cAAc;AACzEJ,OAAKI,UAAL;AACAV,MAAIW,MAAJ,CAAW,IAAX,EAAiB,MAAM;AACrBC,YAAQC,GAAR,CAAY,0BAAZ;AACD,GAFD;AAGD,CALD,EAKGC,KALH,CAKSC,SAAS;AAChBH,UAAQC,GAAR,CAAY,QAAZ,EAAsBE,KAAtB;AACD,CAPD;;AASAf,IAAIgB,GAAJ,CAAQ,aAAR,EAAuB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnC,QAAMC,SAAS,EAAf;AACA,MAAIF,IAAIG,KAAJ,CAAUC,MAAd,EAAsBF,OAAOE,MAAP,GAAgBJ,IAAIG,KAAJ,CAAUC,MAA1B;AACtBf,KAAGgB,UAAH,CAAc,QAAd,EAAwBC,IAAxB,GAA+BC,OAA/B,GAAyCf,IAAzC,CAA8CgB,UAAU;AACtD,UAAMC,WAAW,EAAEC,aAAaF,OAAOG,MAAtB,EAAjB;AACAV,QAAIb,IAAJ,CAAS,EAAEwB,WAAWH,QAAb,EAAuBI,SAASL,MAAhC,EAAT;AACD,GAHD,EAGGX,KAHH,CAGSC,SAAS;AAChBH,YAAQC,GAAR,CAAYE,KAAZ;AACAG,QAAIG,MAAJ,CAAW,GAAX,EAAgBhB,IAAhB,CAAqB,EAAE0B,SAAU,0BAAyBhB,KAAM,EAA3C,EAArB;AACD,GAND;AAOD,CAVD;;AAYAf,IAAIgC,IAAJ,CAAS,aAAT,EAAwB,CAACf,GAAD,EAAMC,GAAN,KAAc;AACpC,QAAMe,WAAWhB,IAAIiB,IAArB;AACAD,WAASE,OAAT,GAAmB,IAAIC,IAAJ,EAAnB;AACA,MAAI,CAACH,SAASZ,MAAd,EACEY,SAASZ,MAAT,GAAkB,KAAlB;;AAEF,QAAMgB,MAAMC,gBAAMC,aAAN,CAAoBN,QAApB,CAAZ;AACA,MAAII,GAAJ,EAAS;AACPnB,QAAIG,MAAJ,CAAW,GAAX,EAAgBhB,IAAhB,CAAqB,EAAE0B,SAAU,oBAAmBM,GAAI,EAAnC,EAArB;AACA;AACD;;AAED/B,KAAGgB,UAAH,CAAc,QAAd,EAAwBkB,SAAxB,CAAkCP,QAAlC,EAA4CxB,IAA5C,CAAiDgC,UAC/CnC,GAAGgB,UAAH,CAAc,QAAd,EAAwBC,IAAxB,CAA6B,EAAEmB,KAAKD,OAAOE,UAAd,EAA7B,EAAyDC,KAAzD,CAA+D,CAA/D,EAAkEC,IAAlE,EADF,EAEEpC,IAFF,CAEOwB,YAAY;AACjBf,QAAIb,IAAJ,CAAS4B,QAAT;AACD,GAJD,EAIGnB,KAJH,CAISC,SAAS;AAChBH,YAAQC,GAAR,CAAYE,KAAZ;AACAG,QAAIG,MAAJ,CAAW,GAAX,EAAgBhB,IAAhB,CAAqB,EAAE0B,SAAU,0BAAyBhB,KAAM,EAA3C,EAArB;AACD,GAPD;AAQD,CApBD;;AAsBAf,IAAIgB,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAKC,GAAL,KAAa;AACxBA,MAAI4B,QAAJ,CAAaC,eAAKC,OAAL,CAAa,mBAAb,CAAb;AACD,CAFD","file":"server.js","sourcesContent":["\nimport SourceMapSupport from 'source-map-support';\nSourceMapSupport.install();\nimport 'babel-polyfill';\nimport path from 'path';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport { MongoClient } from 'mongodb';\nimport Issue from './issue.js';\n\nconst app = express();\napp.use(express.static('static'));\napp.use(bodyParser.json());\n\nlet db;\nMongoClient.connect('mongodb://localhost/issuetracker').then(connection => {\n  db = connection;\n  app.listen(3000, () => {\n    console.log('App started on port 3000');\n  });\n}).catch(error => {\n  console.log('ERROR:', error);\n});\n\napp.get('/api/issues', (req, res) => {\n  const filter = [];\n  if (req.query.status) filter.status = req.query.status;\n  db.collection('issues').find().toArray().then(issues => {\n    const metadata = { total_count: issues.length };\n    res.json({ _metadata: metadata, records: issues });\n  }).catch(error => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\napp.post('/api/issues', (req, res) => {\n  const newIssue = req.body;\n  newIssue.created = new Date();\n  if (!newIssue.status)\n    newIssue.status = 'New';\n\n  const err = Issue.validateIssue(newIssue);\n  if (err) {\n    res.status(422).json({ message: `Invalid request: ${err}` });\n    return;\n  }\n\n  db.collection('issues').insertOne(newIssue).then(result =>\n    db.collection('issues').find({ _id: result.insertedId }).limit(1).next()\n  ).then(newIssue => {\n    res.json(newIssue);\n  }).catch(error => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\napp.get('*', (req,res) => {\n  res.sendFile(path.resolve('static/index.html'));\n});\n"]}